#!/usr/bin/env perl

use Safe;
use Modern::Perl;
use Data::Dumper;
use Mojolicious::Lite;
use Lexical::Persistence;
use IO::CaptureOutput qw(capture);

my %persist;

my $safe = Safe->new;
$safe->permit_only(qw(
    :base_core
    :base_mem
    :base_loop
    :base_math
    :base_orig
    say
    print
));

get '/' => sub {
    my $self = shift;

    my $sid = $self->req->cookie('sid');
    $sid = $sid->value if defined $sid;
    if(not defined $sid or not exists $persist{$sid}) {
        $sid = rand;
        $self->res->cookies(
            Mojo::Cookie::Response->new(
                name  => 'sid',
                value => $sid,
            )
        );
        $persist{$sid} = Lexical::Persistence->new;
    }
} => 'index';

post '/eval' => sub {
    my $self = shift;

    my $sid = $self->req->cookie('sid');
    $sid = $sid->value if defined $sid;
    my($out, $err, $ret) = safe_eval($self->param('code'), $sid);

    $self->render_text($out) if $out;
    if($err) {
        $err = prepare_error_text($err);
        $self->render_text($out ? "Warning: $err" : "Error: $err")
    }
    $self->render_text(Dumper($ret));
};

app->start;

sub safe_eval {
    my($code, $sid) = @_;

    my($out, $err, $ret) = execute(compile($code, $sid),  $sid);

    # TODO

    ($out, $err, $ret);
}

sub compile {
    my $compiled = $safe->reval(prepare_code(@_));
    return $compiled ? $compiled : $@;
}

sub execute {
    my($compiled, $sid) = @_;

    my(@ret, $stdout, $stderr);
    unless(ref $compiled) {
        $stderr .= $compiled;
        return ($stdout, $stderr, \@ret);
    }

    my $persisted = $persist{$sid}->wrap($compiled);
    capture { @ret = eval { $persisted->() } } \$stdout, \$stderr;

    ($stdout, $stderr, \@ret);
}

sub prepare_code {
    my($code, $sid) = @_;

    my $saved = join '', map { "my $_;" } keys %{ $persist{$sid}->get_context('_') };
    $saved .= $code;

    qq!sub { $saved }!;
}

sub prepare_error_text {
    my $text = shift;

    given($text) {
        when(/\btrapped\b/) { return 'Operation not permitted' }
        default             { $text }
    }
}

__DATA__

@@ index.html.ep
% layout 'default';
<input type="text" name="code" id="code"/>
<input type="submit" id="submit"/>
<div id="result"></div>

@@ layouts/default.html.ep
<!doctype html>
<html>
    <head>
        <title>Try Perl 5! An interactive tutorial in your browser</title>
        <script src="http://code.jquery.com/jquery-1.4.2.min.js" type="text/javascript"></script>
        <script type="text/javascript">
            $(document).ready(
                function() {
                    $('#submit').click(
                        function() {
                            $.post(
                                '/eval',
                                {
                                    code: $('#code').val(),
                                },
                                function(data) {
                                    $('#result').html(data);
                                }
                            )
                        }
                    )
                }
            );
        </script>
    </head>
    <body>
        <%== content %>
    </body>
</html>
