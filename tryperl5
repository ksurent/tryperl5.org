#!/usr/bin/env perl

use Safe;
use UUID::Tiny;
use Modern::Perl;
use Data::Dumper;
use Mojolicious::Lite;
use Lexical::Persistence;
use IO::CaptureOutput qw(capture);

$Data::Dumper::Indent = 0;

my %persist;
my $safe = Safe->new;
$safe->permit_only(qw(
    :base_core
    :base_mem
    :base_loop
    :base_math
    :base_orig
    say
    print
));

get '/' => sub {
    my $self = shift;

    my $sid = $self->req->cookie('sid');
    $sid = $sid->value if defined $sid;
    if(not defined $sid or not exists $persist{$sid}) {
        $sid = create_UUID_as_string(UUID_V4);
        $self->res->cookies(
            Mojo::Cookie::Response->new(
                name   => 'sid',
                value  => $sid,
                domain => 'tryperl5.org',
                path   => '/',
            )
        );
        $persist{$sid} = Lexical::Persistence->new;
    }
    $self->stash(perl_version => sub { chomp(my @v = `$^X -v`); $v[1]; }->());
} => 'index';

post '/eval' => sub {
    my $self = shift;

    my $sid = $self->req->cookie('sid');
    unless(defined $sid) {
        $self->render_json({});
        return;
    }

    my($out, $err, $ret) = safe_eval($self->param('code'), $sid->value);
    $ret = Data::Dumper->new([$ret], ['RETURN_VALUE'])->Dump;
    $self->render_json({
        stdout  => $out,
        stderr  => $err,
        retval  => $ret,
    });
};

app->static(
    MojoX::Dispatcher::Static->new(
        prefix => '/js',
        root   => '/home/ksurent/tryperl5.org/jquery-console',
    )
);
app->start;

sub safe_eval {
    my($code, $sid) = @_;

    local $SIG{ALRM} = sub { die 'Operation timed out' };
    alarm(3);
    my($out, $err, $ret) = execute(compile($code, $sid),  $sid);
    alarm(0);

    ($out, $err, $ret);
}

sub compile {
    my $compiled = $safe->reval(prepare_code(@_), 1);
    return $compiled ? $compiled : $@;
}

sub execute {
    my($compiled, $sid) = @_;

    my(@ret, $stdout, $stderr);
    unless(ref $compiled) {
        $stderr = $compiled;
        return ($stdout, $stderr, \@ret);
    }

    my $persisted = $persist{$sid}->wrap($compiled);
    capture { @ret = eval { $persisted->() } } \$stdout, \$stderr;

    ($stdout, $stderr, \@ret);
}

sub prepare_code {
    my($code, $sid) = @_;

    my $saved = join '', map { "my $_;" } keys %{ $persist{$sid}->get_context('_') };
    $saved .= $code;

    qq!sub { $saved }!;
}

__DATA__
@@ index.html.ep
<!doctype html>
<html>
    <head>
        <title>Try Perl 5! An interactive tutorial in your browser</title>
        <script src="/js/jquery-1.4.2.min.js" type="text/javascript"></script>
        <script src="/js/jquery.console.js" type="text/javascript"></script>
        <script type="text/javascript">
            $(document).ready( function() {
                var console = $('<div class="console"/>');
                $('body').append(console);
                console.console({
                    autofocus: true,
                    promptHistory: true,
                    promtLabel: '> ',
                    welcomeMessage: '<%= $perl_version  %>',
                    commandValidate: function(line) {
                        if(line == '') return false;
                        else return true;
                    },
                    commandHandle: function(line) {
                        var data;
                        $.post(
                            '/eval',
                            { code: line },
                            function(res) {
                                data = [
                                    { msg: res.stdout, className: 'stdout' },
                                    { msg: res.stderr, className: 'stderr' },
                                    { msg: res.retval, className: 'retval' }
                                ];
                            },
                            'json'
                        );
                        return data;
                    }
                });
            });
        </script>
        <style type="text/css">
              div.console { font-size: 14px; }
              div.console div.jquery-console-inner { width:900px; height:200px; background:#333; padding:0.5em; overflow:auto; }
              div.console div.jquery-console-prompt-box { color:#fff; font-family:monospace; }
              div.console div.jquery-console-focus span.jquery-console-cursor { background:#fefefe; color:#333; font-weight:bold; }
              div.console div.stderr { color:#ef0505; font-family:monospace; padding:0.1em; }
              div.console div.stdout { color:#1ad027; font-family:monospace; padding:0.1em; }
              div.console div.retval { color:#52666f; font-family:monospace; padding:0.1em; }
              div.console span.jquery-console-prompt-label { font-weight:bold; }
              div.console div.jquery-console-welcome { color: #fff; }
        </style>
    </head>
    <body></body>
</html>
